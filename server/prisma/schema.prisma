generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Channel {
  id                Int                @id @default(autoincrement())
  name              String             @unique
  discordId         String             @unique
  webhookId         String             @unique
  webhookToken      String             @unique
  adminMemberships  AdminMembership[]
  clientMemberships ClientMembership[]
  type              String

  @@unique([id, type])
}

model Proxy {
  id      Int    @id @default(autoincrement())
  contact String @unique
  type    String @unique
}

model Admin {
  id               Int               @id @default(autoincrement())
  name             String
  adminMemberships AdminMembership[]
  contacts         AdminContact[]
}

model Client {
  id          Int                @id @default(autoincrement())
  name        String
  memberships ClientMembership[]
  contacts    ClientContact[]
}

model AdminContact {
  id      Int     @id @default(autoincrement())
  user    Admin   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int     @unique
  contact String  @unique
}

model ClientContact {
  id      Int     @id @default(autoincrement())
  user    Client  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int     @unique
  contact String  @unique
}

model AdminMembership {
  id        Int     @id @default(autoincrement())
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId Int
  user      Admin   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  role      String

  @@unique([channelId, userId])
  @@index([channelId, userId])
}

model ClientMembership {
  id          Int     @id @default(autoincrement())
  channel     Channel @relation(fields: [channelId, channelType], references: [id, type], onDelete: Cascade)
  channelId   Int
  channelType String
  user        Client  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  role        String

  @@unique([channelType, userId])
  @@unique([channelId, userId])
  @@index([channelId, userId])
}